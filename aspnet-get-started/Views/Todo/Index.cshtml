@{
	ViewBag.Title = "Index";
}
<style>
	html {
		overflow-y: scroll;
	}

	body {
		padding-top: 50px;
	}

	#todo-list {
		margin-bottom: 30px;
	}

	#todo-form {
		margin-bottom: 50px;
	}
</style>
<script>
	(function(window, angular) {
		angular.module('todoApp', []);
	})(window, window.angular);

	(function(window, angular) {
		angular.module('todoApp')

		// super simple service
		// each function returns a promise object 
		.factory('Todos', ['$http', function($http) {
			return {
				get: function() {
					return $http.get('/api/todos');
				},
				create: function(todoData) {
					return $http.post('/api/todos', todoData);
				},
				delete: function(id) {
					return $http.delete('/api/todos/' + id);
				}
			}
		}]);
	})(window, window.angular);

	(function(window, angular) {
		angular.module('todoApp')

		// inject the Todo service factory into our controller
		.controller('todoController', ['$scope', '$http', 'Todos', function($scope, $http, Todos) {
			$scope.formData = {};
			$scope.loading = true;

			// GET =====================================================================
			// when landing on the page, get all todos and show them
			// use the service to get all the todos
			Todos.get()
				.success(function(data) {
					$scope.todos = data;
					$scope.loading = false;
				});

			// CREATE ==================================================================
			// when submitting the add form, send the text to the node API
			$scope.createTodo = function() {
				// validate the formData to make sure that something is there
				// if form is empty, nothing will happen
				if ($scope.formData.text != undefined) {
					$scope.loading = true;

					// call the create function from our service (returns a promise object)
					Todos.create($scope.formData)

					// if successful creation, call our get function to get all the new todos
					.success(function(data) {
						$scope.loading = false;
						$scope.formData = {}; // clear the form so our user is ready to enter another
						$scope.todos = data; // assign our new list of todos
					});
				}
			};

			// DELETE ==================================================================
			// delete a todo after checking it
			$scope.deleteTodo = function(id) {
				$scope.loading = true;

				Todos.delete(id)
					// if successful creation, call our get function to get all the new todos
					.success(function(data) {
						$scope.loading = false;
						$scope.todos = data; // assign our new list of todos
					});
			};
		}]);
	})(window, window.angular);
</script>
<div class="container" ng-controller="todoController">
	<!-- HEADER AND TODO COUNT -->
	<div class="jumbotron text-center">
		<h1>I'm a Todo-aholic <small>Items to do: {{ todos.length }}</small></h1>
	</div>

	<!-- TODO LIST -->
	<div id="todo-list" class="row">
		<div class="col-sm-4 col-sm-offset-4">
			<!-- LOOP OVER THE TODOS IN $scope.todos -->
			<div class="row" ng-repeat="todo in todos">
				<div class="col-sm-8">
					<div class="checkbox-inline">
						<label>
							<input type="checkbox" ng-click="deleteTodo(todo._id)"> {{ todo.text }}
						</label>
					</div>
				</div>
				<div class="col-sm-4">{{ todo.created }}</div>
			</div>

			<p class="text-center" ng-show="loading">
				<span class="fa fa-spinner fa-spin fa-3x"></span>
			</p>
		</div>
	</div>

	<!-- FORM TO CREATE TODOS -->
	<div id="todo-form" class="row">
		<div class="col-sm-8 col-sm-offset-2 text-center">
			<form>
				<div class="form-group">
					<!-- BIND THIS VALUE TO formData.text IN ANGULAR -->
					<input type="text" class="form-control input-lg text-center" placeholder="I want to buy a puppy that will love me forever" ng-model="formData.text">
				</div>

				<!-- createToDo() WILL CREATE NEW TODOS -->
				<button type="submit" class="btn btn-primary btn-lg" ng-click="createTodo()">Add</button>
			</form>
		</div>
	</div>
</div>